{"version":3,"sources":["context/themeContext.js","components/Navbar/Navbar.js","components/Form.js","components/Url.js","components/Message.js","components/Footer.js","components/DownloadBtn.js","components/DownloadBar.js","App.js","index.js"],"names":["ThemeContext","React","createContext","ThemeContextProvider","props","localThemeSetting","window","localStorage","getItem","useState","theme","setTheme","useEffect","setItem","Provider","value","toggleTheme","children","navbarOpened","setNavbarOpened","useContext","className","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","onClick","style","marginLeft","form","text","setText","onSubmit","e","preventDefault","handleUrls","rows","required","placeholder","onChange","target","url","uri","rel","message","role","paddingTop","textAlign","marginBottom","Date","getFullYear","data-icon","download","handleDownload","dataExport","DownloadBtn","elem","document","createElement","links","map","item","urlsFile","Blob","URL","createObjectURL","now","click","index","array","length","App","urls","setUrls","setDataExport","warning","setWarning","urlsCount","setUrlsCount","Form","urlsData","extractUrls","key","Url","Message","DownloadBar","Footer","ReactDOM","render","StrictMode","getElementById"],"mappings":"4SACMA,G,YAAeC,IAAMC,iBAE3B,SAASC,EAAqBC,GAC5B,IAAMC,EAAoBC,OAAOC,aAAaC,QAAQ,UAAY,QAD/B,EAETC,mBAASJ,GAFA,mBAE5BK,EAF4B,KAErBC,EAFqB,KAYnC,OARAC,qBAAU,WACRL,aAAaM,QAAQ,QAASH,KAC7B,CAACA,IAOF,kBAACV,EAAac,SAAd,CAAuBC,MAAO,CAAEL,MAAOA,EAAOM,YALhD,WACEL,EAAmB,UAAVD,EAAoB,OAAS,YAIqCN,EAAMa,UCbtE,iBAAO,IAAD,EACqBR,oBAAS,GAD9B,mBACZS,EADY,KACEC,EADF,OAKYC,qBAAWpB,GAAlCU,EALW,EAKXA,MAAOM,EALI,EAKJA,YAEf,OACE,oCAEE,yBAAKK,UAAS,0CAAqCX,EAArC,mBAAqDA,IACjE,uBAAGW,UAAS,wBAAmBX,GAASY,KAAK,KAC3C,uBAAGD,UAAU,gBADf,iBAGA,4BACEA,UAAU,iBACVE,KAAK,SACLC,cAAY,WACZC,cAAY,aACZC,gBAAc,YACdC,gBAAc,QACdC,aAAW,oBACXC,QApBkB,WACxBV,GAAiBD,KAqBX,0BAAMG,UAAU,yBAGlB,yBAAKA,UAAWH,EAAe,gCAAkC,4BAC/D,wBAAIG,UAAU,sBACZ,wBAAIA,UAAU,YACZ,uBAAGA,UAAS,6BAAwBX,GAASY,KAAK,kDAChD,uBAAGD,UAAU,qBADf,mBAIF,wBAAIA,UAAU,YACZ,uBAAGA,UAAS,6BAAwBX,GAASY,KAAK,8CAChD,uBAAGD,UAAU,eADf,aAIF,wBAAIA,UAAU,YACZ,uBAAGA,UAAS,6BAAwBX,GAASY,KAAK,2CAChD,uBAAGD,UAAU,uBADf,gBAIF,wBAAIA,UAAU,YACZ,4BACEA,UAAS,iCAA4BX,GACrCoB,MAAO,CAAEC,WAAY,QACrBF,QAASb,GAET,uBAAGK,UAAU,yBClDd,WAACW,GAAU,IAChBtB,EAAUU,qBAAWpB,GAArBU,MADe,EAECD,mBAAS,IAFV,mBAEhBwB,EAFgB,KAEVC,EAFU,KAUvB,OACE,oCACE,0BAAMC,SARW,SAACC,GACpBA,EAAEC,iBACFL,EAAKM,WAAWL,GAChBC,EAAQ,MAMJ,yBAAKb,UAAU,cACb,8BACEA,UAAU,oBACVkB,KAAK,IACLC,UAAQ,EACRC,YAAY,qBACZ1B,MAAOkB,EACPS,SAAU,SAACN,GAAD,OAAOF,EAAQE,EAAEO,OAAO5B,WAGtC,4BAAQQ,KAAK,SAASF,UAAS,mBAAcX,IAA7C,eCvBO,WAACkC,GAAS,IACflC,EAAUU,qBAAWpB,GAArBU,MAER,OACE,6BACE,uBAAGW,UAAS,oBAAeX,GAASY,KAAMsB,EAAIC,IAAKF,OAAO,SAASG,IAAI,uBACpEF,EAAIC,OCPE,WAACE,GACd,OACE,yBAAK1B,UAAS,sBAAiB0B,EAAQxB,MAAQyB,KAAK,SACjDD,EAAQ9B,W,OCDA,aAAO,IACZP,EAAUU,qBAAWpB,GAArBU,MACR,OACE,4BAAQW,UAAS,kBAAaX,IAC5B,yBAAKW,UAAU,aACb,uBACES,MAAO,CACLmB,WAAY,OACZC,UAAW,SACXC,aAAc,QAGhB,uBAAG7B,KAAK,8BAAR,iBAAgD,IAAI8B,MAAOC,cAA3D,MAEF,2BACE,kBAAC,IAAD,CACE/B,KAAK,0CACLgC,YAAU,eACV1B,aAAW,uCAHb,QAMgB,IAChB,kBAAC,IAAD,CACEN,KAAK,uDACLgC,YAAU,cACV1B,aAAW,wCAHb,SAMgB,IAChB,kBAAC,IAAD,CACEN,KAAK,+CACLgC,YAAU,sBACV1B,aAAW,uCAHb,YC9BK,WAAC2B,GAAc,IACpB7C,EAAUU,qBAAWpB,GAArBU,MAER,OACE,oCACE,4BAAQW,UAAS,mBAAcX,EAAd,gBAAmCmB,QAAS,kBAAM0B,EAASC,kBAAkBD,UAAQ,GACpG,uBAAGlC,UAAU,oBADf,IACuCkC,EAAStB,QCNvC,cAAqB,IAAlBwB,EAAiB,EAAjBA,WA+BhB,OACE,yBAAKpC,UAAU,YACb,kBAACqC,EAAD,CAAaF,eA/BS,WACxB,IAAMG,EAAOC,SAASC,cAAc,KAChCC,EAAQL,EAAWM,KAAI,SAACC,GAAD,gBAAaA,EAAb,UACvBC,EAAW,IAAIC,KAAKJ,EAAO,CAAEvC,KAAM,eACvCoC,EAAKrC,KAAO6C,IAAIC,gBAAgBH,GAChCN,EAAKJ,SAAL,sBAA+BH,KAAKiB,MAApC,QACAV,EAAKW,SAyB6CrC,KAAK,gBAAiB,IACtE,kBAACyB,EAAD,CAAaF,eAtBQ,WACvB,IAAMG,EAAOC,SAASC,cAAc,KAChCC,EAAQL,EAAWM,KAAI,SAACC,GAAD,iBAAcA,EAAd,aAAuBA,EAAvB,WACvBC,EAAW,IAAIC,KAAKJ,EAAO,CAAEvC,KAAM,eACvCoC,EAAKrC,KAAO6C,IAAIC,gBAAgBH,GAChCN,EAAKJ,SAAL,sBAA+BH,KAAKiB,MAApC,OACAV,EAAKW,SAgB4CrC,KAAK,eAAgB,IACpE,kBAACyB,EAAD,CAAaF,eAdS,WACxB,IAAMG,EAAOC,SAASC,cAAc,KAC9BC,EAAQL,EAAWM,KAAI,SAACC,EAAMO,EAAOC,GACzC,OAAOA,EAAMC,OAAS,IAAMF,EAAQP,EAA7B,UAAuCA,EAAvC,QAELC,EAAW,IAAIC,KAAKJ,EAAO,CAAEvC,KAAM,eACvCoC,EAAKrC,KAAO6C,IAAIC,gBAAgBH,GAChCN,EAAKJ,SAAL,sBAA+BH,KAAKiB,MAApC,QACAV,EAAKW,SAM6CrC,KAAK,kBCkC5CyC,MA5Df,WAAgB,IACNhE,EAAUU,qBAAWpB,GAArBU,MADK,EAEWD,mBAAS,MAFpB,mBAENkE,EAFM,KAEAC,EAFA,OAGuBnE,mBAAS,MAHhC,mBAGNgD,EAHM,KAGMoB,EAHN,OAIiBpE,mBAAS,MAJ1B,mBAINqE,EAJM,KAIGC,EAJH,OAKqBtE,mBAAS,MAL9B,mBAKNuE,EALM,KAKKC,EALL,KAoBb,OACE,0BAAM5D,UAAS,gBAAWX,IACxB,kBAAC,EAAD,MACA,yBAAKW,UAAS,+CAA0CX,IACtD,yBAAKW,UAAU,aACb,wBAAIA,UAAU,aAAd,gBACA,uBAAGA,UAAU,QACV,IADH,mDAEmD,IACjD,0BAAMA,UAAS,uBAAkBX,IAAjC,SAAuD,IACvD,0BAAMW,UAAS,uBAAkBX,IAAjC,QAJF,6CASJ,yBAAKW,UAAU,qBACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,OACb,kBAAC6D,EAAD,CAAM5C,WA/BG,SAACL,GAClB,IAAIkD,EAAWC,IAAYnD,GACH,qBAAbkD,GAAgD,IAApBA,EAASV,QAC9CM,EAAW,8CACXH,EAAQ,QAERG,GAAW,GACXF,EAAcM,GACdP,EAAQO,EAASpB,KAAI,SAAClB,EAAKwC,GAAN,OAAc,kBAACC,EAAD,CAAKD,IAAKA,EAAKxC,IAAKA,QACvDoC,EAAaE,EAASV,YAuBhB,yBAAKpD,UAAU,QACZyD,GAAW,kBAACS,EAAD,CAAShE,KAAK,WAAWuD,GACpCH,GACC,yBAAKtD,UAAU,QACb,kBAACkE,EAAD,CAAShE,KAAK,WACX,UAAmByD,EAAnBA,EAAY,EAAZ,6BAEFL,EACD,6BACA,kBAACa,EAAD,CAAa/B,WAAYA,SAOrC,kBAACgC,EAAD,QC7DNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAACzF,EAAD,KACE,kBAAC,EAAD,QAGJyD,SAASiC,eAAe,W","file":"static/js/main.4d4453ae.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nconst ThemeContext = React.createContext();\n\nfunction ThemeContextProvider(props) {\n  const localThemeSetting = window.localStorage.getItem(\"theme\") || \"light\";\n  const [theme, setTheme] = useState(localThemeSetting);\n\n  useEffect(() => {\n    localStorage.setItem(\"theme\", theme);\n  }, [theme]);\n\n  function toggleTheme() {\n    setTheme(theme === \"light\" ? \"dark\" : \"light\");\n  }\n\n  return (\n    <ThemeContext.Provider value={{ theme: theme, toggleTheme: toggleTheme }}>{props.children}</ThemeContext.Provider>\n  );\n}\n\nexport { ThemeContextProvider, ThemeContext };\n","import React, { useState, useContext } from \"react\";\nimport { ThemeContext } from \"../../context/themeContext\";\n\nexport default () => {\n  const [navbarOpened, setNavbarOpened] = useState(false);\n  const handleBurgerClick = () => {\n    setNavbarOpened(!navbarOpened);\n  };\n  const { theme, toggleTheme } = useContext(ThemeContext);\n\n  return (\n    <>\n      {/* <nav className=\"navbar navbar-expand-lg navbar-dark\" > */}\n      <nav className={`navbar navbar-expand-lg nav-bg--${theme} navbar-${theme}`}>\n        <a className={`navbar-brand--${theme}`} href=\"/\">\n          <i className=\"fas fa-link\"></i> extract-urls\n        </a>\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#navbarNav\"\n          aria-controls=\"navbarNav\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n          onClick={handleBurgerClick}\n        >\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        {/* <div className=\"collapse navbar-collapse\"> */}\n        <div className={navbarOpened ? \"collapse navbar-collapse show\" : \"collapse navbar-collapse\"}>\n          <ul className=\"navbar-nav ml-auto\">\n            <li className=\"nav-item\">\n              <a className={`nav-link nav-link--${theme}`} href=\"https://github.com/huckbit/extract-urls#readme\">\n                <i className=\"fas fa-file-code\"></i> Documentation\n              </a>\n            </li>\n            <li className=\"nav-item\">\n              <a className={`nav-link nav-link--${theme}`} href=\"https://www.npmjs.com/package/extract-urls\">\n                <i className=\"fab fa-npm\"></i> Package\n              </a>\n            </li>\n            <li className=\"nav-item\">\n              <a className={`nav-link nav-link--${theme}`} href=\"https://github.com/huckbit/extract-urls\">\n                <i className=\"fas fa-code-branch\"></i> Repository\n              </a>\n            </li>\n            <li className=\"nav-item\">\n              <button\n                className={`btn nav-link nav-link--${theme}`}\n                style={{ marginLeft: \"auto\" }}\n                onClick={toggleTheme}\n              >\n                <i className=\"fas fa-adjust\"></i>\n              </button>\n            </li>\n          </ul>\n        </div>\n      </nav>\n    </>\n  );\n};\n","import React, { useState, useContext } from \"react\";\nimport { ThemeContext } from \"../context/themeContext\";\n\nexport default (form) => {\n  const { theme } = useContext(ThemeContext);\n  const [text, setText] = useState(\"\");\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    form.handleUrls(text);\n    setText(\"\"); //reset input after handling\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <div className=\"form-group\">\n          <textarea\n            className=\"form-control mb-3\"\n            rows=\"7\"\n            required\n            placeholder=\"paste text here...\"\n            value={text}\n            onChange={(e) => setText(e.target.value)}\n          />\n        </div>\n        <button type=\"submit\" className={`btn btn--${theme}`}>\n          Get Urls\n        </button>\n      </form>\n    </>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { ThemeContext } from \"../context/themeContext\";\n\nexport default (url) => {\n  const { theme } = useContext(ThemeContext);\n\n  return (\n    <div>\n      <a className={`nav-link--${theme}`} href={url.uri} target=\"_blank\" rel=\"noopener noreferrer\">\n        {url.uri}\n      </a>\n    </div>\n  );\n};\n","import React from \"react\";\n\nexport default (message) => {\n  return (\n    <div className={`alert alert-${message.type}`} role=\"alert\">\n      {message.children}\n    </div>\n  );\n};\n","import GitHubButton from \"react-github-btn\";\nimport React, { useContext } from \"react\";\nimport { ThemeContext } from \"../context/themeContext\";\n\nexport default () => {\n  const { theme } = useContext(ThemeContext);\n  return (\n    <footer className={`footer--${theme}`}>\n      <div className=\"container\">\n        <p\n          style={{\n            paddingTop: \"15px\",\n            textAlign: \"center\",\n            marginBottom: \"7px\",\n          }}\n        >\n          <a href=\"https://github.com/huckbit\">© huckbit {new Date().getFullYear()} </a>\n        </p>\n        <p>\n          <GitHubButton\n            href=\"https://github.com/huckbit/extract-urls\"\n            data-icon=\"octicon-star\"\n            aria-label=\"Star huckbit/extract-urls on GitHub\"\n          >\n            Star\n          </GitHubButton>{\" \"}\n          <GitHubButton\n            href=\"https://github.com/huckbit/extract-urls/subscription\"\n            data-icon=\"octicon-eye\"\n            aria-label=\"Watch huckbit/extract-urls on GitHub\"\n          >\n            Watch\n          </GitHubButton>{\" \"}\n          <GitHubButton\n            href=\"https://github.com/huckbit/extract-urls/fork\"\n            data-icon=\"octicon-repo-forked\"\n            aria-label=\"Fork huckbit/extract-urls on GitHub\"\n          >\n            Fork\n          </GitHubButton>\n        </p>\n      </div>\n    </footer>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { ThemeContext } from \"../context/themeContext\";\n\nexport default (download) => {\n  const { theme } = useContext(ThemeContext);\n\n  return (\n    <>\n      <button className={`btn btn--${theme} btn-sm mt-1`} onClick={() => download.handleDownload()} download>\n        <i className=\"fas fa-download\"></i> {download.text}\n      </button>\n    </>\n  );\n};\n","import React from \"react\";\nimport DownloadBtn from \"./DownloadBtn\";\n\nexport default ({ dataExport }) => {\n  // Create new txt export file using dataExport state\n  const handleDownloadTxt = () => {\n    const elem = document.createElement(\"a\");\n    let links = dataExport.map((item) => `${item} \\n`);\n    let urlsFile = new Blob(links, { type: \"text/plain\" });\n    elem.href = URL.createObjectURL(urlsFile);\n    elem.download = `urls-export-${Date.now()}.txt`;\n    elem.click();\n  };\n\n  // Create new markdown export file using dataExport state\n  const handleDownloadMd = () => {\n    const elem = document.createElement(\"a\");\n    let links = dataExport.map((item) => `[${item}](${item}) \\n`);\n    let urlsFile = new Blob(links, { type: \"text/plain\" });\n    elem.href = URL.createObjectURL(urlsFile);\n    elem.download = `urls-export-${Date.now()}.md`;\n    elem.click();\n  };\n\n  const handleDownloadCsv = () => {\n    const elem = document.createElement(\"a\");\n    const links = dataExport.map((item, index, array) => {\n      return array.length - 1 === index ? item : `${item},`;\n    });\n    let urlsFile = new Blob(links, { type: \"text/plain\" });\n    elem.href = URL.createObjectURL(urlsFile);\n    elem.download = `urls-export-${Date.now()}.csv`;\n    elem.click();\n  };\n  return (\n    <div className=\"download\">\n      <DownloadBtn handleDownload={handleDownloadTxt} text=\"Export .txt\" />{\" \"}\n      <DownloadBtn handleDownload={handleDownloadMd} text=\"Export .md\" />{\" \"}\n      <DownloadBtn handleDownload={handleDownloadCsv} text=\"Export .csv\" />\n    </div>\n  );\n};\n","import React, { useContext, useState } from \"react\";\nimport extractUrls from \"extract-urls\";\nimport \"./sass/App.scss\";\nimport \"./sass/theme.scss\";\nimport { ThemeContext } from \"./context/themeContext\";\nimport Nabar from \"./components/Navbar/Navbar\";\nimport Form from \"./components/Form\";\nimport Url from \"./components/Url\";\nimport Message from \"./components/Message\";\nimport Footer from \"./components/Footer\";\nimport DownloadBar from \"./components/DownloadBar\";\n\nfunction App() {\n  const { theme } = useContext(ThemeContext);\n  const [urls, setUrls] = useState(null);\n  const [dataExport, setDataExport] = useState(null);\n  const [warning, setWarning] = useState(null);\n  const [urlsCount, setUrlsCount] = useState(null);\n\n  const handleUrls = (text) => {\n    let urlsData = extractUrls(text);\n    if (typeof urlsData === \"undefined\" || urlsData.length === 0) {\n      setWarning(`Last given string doesn't contain any Url!`);\n      setUrls(null); //cleaning previous rendered content\n    } else {\n      setWarning(false); //cleaning previous rendered content\n      setDataExport(urlsData); // setting data for export\n      setUrls(urlsData.map((uri, key) => <Url key={key} uri={uri} />));\n      setUrlsCount(urlsData.length); //setting count value\n    }\n  };\n\n  return (\n    <main className={`main--${theme}`}>\n      <Nabar />\n      <div className={`jumbotron jumbotron-fluid jumbotron--${theme}`}>\n        <div className=\"container\">\n          <h1 className=\"display-4\">extract-urls</h1>\n          <p className=\"lead\">\n            {\" \"}\n            Extract urls from a given string. Recognise both{\" \"}\n            <span className={`badge badge--${theme}`}>https</span>{\" \"}\n            <span className={`badge badge--${theme}`}>http</span> and returns a lower case list of\n            urls.\n          </p>\n        </div>\n      </div>\n      <div className=\"container content\">\n        <div className=\"row\">\n          <div className=\"col\">\n            <Form handleUrls={handleUrls} />\n            <div className=\"my-3\">\n              {warning && <Message type=\"warning\">{warning}</Message>}\n              {urls && (\n                <div className=\"pb-5\">\n                  <Message type=\"success\">\n                    {urlsCount > 1 ? `${urlsCount} urls found` : `${urlsCount} url found`}\n                  </Message>\n                  {urls}\n                  <hr />\n                  <DownloadBar dataExport={dataExport} />\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n      <Footer />\n    </main>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { ThemeContextProvider } from \"./context/themeContext\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeContextProvider>\n      <App />\n    </ThemeContextProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}